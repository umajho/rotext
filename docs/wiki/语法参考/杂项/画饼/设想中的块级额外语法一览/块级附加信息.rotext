= 块级附加信息 =

任意多数量的[*块级[[s:杂项/画饼/设想中的通用概念#附加信息|附加信息]]*]可以附着在_
[[s:块级阶段#块级元素|块级元素]]之前。

; 开启 :: [`{!`]。
; 闭合 :: [`}`]。
; 开启部分与闭合部分之间
: 由空白分隔的，以下两种形式之一的附加信息：
>
> * [`.<name>`]，[`<name>`] 对应为 “类”，与 HTML 之中的 “类” 保持一致。
> * [`<key>="<value>"`]/[`<key>='<value>'`]，[`<key>`]、[`<value>`] 对应于 “属_
> > 性” 中的键与值，解析与 HTML 之中标签的属性保持一致。目前没有作用。

对于列表项与描述列表项，其标记需要与其附加信息的结尾在同一行。且如果在源代码_
中，一个列表项或描述列表项的上一行结尾是块级附加信息的结尾，那个附加信息属于整_
个列表或描述列表，且那个列表或描述列表视为新的列表或描述列表的开始。

[[s:杂项/画饼/设想中的块级嵌入包含相关/块级参数填充|块级参数填充]]不能附着附加_
信息；附着于[[s:块级元素一览/块级扩展|块级扩展]]的块级附加信息的作用视具体的扩_
展而定；附着于上述之外的[[s:块级阶段#块级元素|块级元素]]的块级附加信息，其中的_
类以及对应元素允许的附加属性会被添加到渲染得到的最外层的那个 HTML 元素当中。

在块级附加信息之间，以及在[[s:块级阶段#块级元素|块级元素]]与块级附加信息之间，_
非换行空白字符会被会被无视。

== 示例 ==

{{ #Example
|| `input=<`
{! .foo}{{#Div||内容。}}
`>
|| `expected=
<div class="foo"><p>内容。</p></div>
}}

{{ #Example
|| `input=<`
{! .foo} {|
|-
{! colspan="2"} !! 占两列
|-
{! rowspan="2"} || 占两行
|| 这一行的第二格
|-
|| 右下角
|}
`>
|| `expected=
<table class="foo">
  <tr>
    <th colspan="2"><p>占两列</p></th>
  </tr>
  <tr>
    <td rowspan="2"><p>占两行</p></td>
    <td><p>这一行的第二格</p></td>
  </tr>
  <tr>
    <td><p>右下角</p></td>
  </tr>
</table>
}}

{{ #Example
|| `input=<`
{! .foo}
* a
{! .foo}
* b
`>
|| `expected=
<ul class="foo">
  <li>a</li>
</ul>
<ul class="bar">
  <li>b</li>
</ul>
}}

{{ #Example
|| `input=
<`
{! .foo}* a
{! .bar
}* b
`>
|| `expected=
<ul>
  <li class="foo">a</li>
  <li class="bar">b</li>
</ul>
}}

{{ #Example
|| `input=<`
{! .foo}{{#折叠||内容。}}
`>
|| `expected=
<x-collapse class="foo">
  <span slot="title">对内容的总结</span>
  <div slot="content">
    <p>内容。</p>
  </div>
</x-collapse>
}}

{{ #Example
|| `input=<`
{! .foo}{{#注||内容。}}
`>
|| `expected=
<x-callout-note class="foo">内容。</x-callout-note>
}}
